import travisgen
import os
import os.path

versions = ["2.6", "2.7", "pypy", "3.2", "3.3", "3.4", "3.5", "pypy3"]
version_to_target = {
    "pypy": "2.7",
    "pypy3": "3.2"
}
pypy_versions = ["pypy", "pypy3"]
py2_versions = ["2.6", "2.7", "pypy"]
noipy_versions = ["2.6", "3.2", "pypy3"]
py35_versions = ["3.5"]

def cocotravis(main, version):
    """Generates .travis.yml test commands for Coconut and Cocotest."""
    target = version_to_target[version] if version in version_to_target else version
    pypy = version in pypy_versions
    py2 = version in py2_versions
    version_num = "2" if py2 else "3"
    other_version_num = "3" if py2 else "2"
    py35 = version in py35_versions
    ipy = version not in noipy_versions

    if main:
        install_cmds = [
            "pip install .",
            "git clone https://github.com/evhub/cocotest.git",
            "cd cocotest",
        ]
    else:
        install_cmds = [
            "git clone -b develop https://github.com/evhub/coconut.git",
            "pip install ./coconut",
        ]
    install_cmds += [
        "git clone https://github.com/evhub/prisoner.git",
        "git clone https://github.com/evhub/pyston.git",
    ]
    if py2:
        install_cmds.append("pip install futures")
    if ipy:
        install_cmds += [
            "pip install pygments",
            "pip install jupyter",
        ]
    if not py35:
        install_cmds.append("rm src/cocotest/py35_test.coco")
    install_cmds += [
        "rm src/cocotest/py"+other_version_num+"_test.coco",
        "mkdir src_target",
        "cp -r src/* src_target",
        "rm src/cocotest/py"+version_num+"_test.coco",
        "rm src/cocotest/non_py26_test.coco",
    ]
    if py35:
        install_cmds.append("rm src/cocotest/py35_test.coco")

    script_cmds = [
        "coconut --version --color cyan",
        "coconut --help",
        r'''coconut --strict --display --code "assert '_coconut' in \`globals\`; msg = '<success>'; pmsg = print\$(msg); pmsg()"''',
        r'''echo "assert '_coconut' in \`globals\`; msg = '<success>'; pmsg = print\$(msg); pmsg()" | coconut --strict --display''',
        r'''python -c "from coconut.convenience import parse; exec(parse('assert \'_coconut\' in \`globals\`; msg = \'<success>\'; pmsg = print\$(msg); pmsg()'))"''',
    ]
    if ipy:
        script_cmds += [
            r'''ipython --ext coconut -c "%coconut assert '_coconut' in \`globals\`; msg = '<success>'; pmsg = print\$(msg); pmsg()"''',
            "coconut --jupyter",
            ]
    if pypy:
        script_cmds += [
            "coconut pyston --recursionlimit 500",
            "coconut prisoner --strict --recursionlimit 500",
            ]
        if ipy:
            script_cmds += [
                "pushd pyston",
                "python runner.py",
                "popd",
            ]
    else:
        script_cmds += [
            "coconut pyston --recursionlimit 1300",
            "coconut prisoner --strict",
            ]
    script_cmds += [
        "coconut extras.coco --run --strict",
        "python extras.py",

        "coconut src/runner.coco file_build --strict",
        "coconut src/cocotest/__init__.coco file_build/cocotest --strict",
        "coconut src/cocotest/main.coco file_build/cocotest --strict",
        "coconut src/cocotest/suite.coc file_build/cocotest --strict",
        "coconut src/cocotest/util.coco file_build/cocotest --strict",
        "coconut src/cocotest/tutorial.coco file_build/cocotest --strict",
        "coconut src_target/cocotest/py"+version_num+"_test.coco file_build/cocotest --strict --target "+target,
        "coconut src_target/cocotest/non_py26_test.coco file_build/cocotest --strict --target "+target,
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco file_build/cocotest --strict --target "+target,
        )
    script_cmds += [
        "python file_build/runner.py",
        "coconut src file_build --strict --standalone",
        "python file_build/runner.py",

        "coconut src folder_build --strict",
        "coconut src_target/cocotest/py"+version_num+"_test.coco folder_build/cocotest --strict --package --target "+target,
        "coconut src_target/cocotest/non_py26_test.coco folder_build/cocotest --strict --package --target "+target,
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco folder_build/cocotest --strict --package --target "+target,
        )
    script_cmds += [
        "python folder_build/runner.py",
        "coconut src/runner.coco folder_build --strict --package",
        "coconut src/cocotest/__init__.coco folder_build/cocotest --strict --package",
        "coconut src/cocotest/main.coco folder_build/cocotest --strict --package",
        "coconut src/cocotest/suite.coc folder_build/cocotest --strict --package",
        "coconut src/cocotest/util.coco folder_build/cocotest --strict --package",
        "coconut src/cocotest/tutorial.coco folder_build/cocotest --strict --package",
        "python folder_build/runner.py",

        "mkdir -p run_build/cocotest",
        "cp -r folder_build/* run_build",
        "cp src/runner.coco run_build",
        "pushd run_build",
        "coconut --run runner.coco --nowrite --strict",
        "coconut --display runner.coco --nowrite --quiet --strict | python",
        "popd",

        "coconut src force_build --strict --force",
        "coconut src_target/cocotest/py"+version_num+"_test.coco force_build/cocotest --strict --package --force --target "+target,
        "coconut src_target/cocotest/non_py26_test.coco force_build/cocotest --strict --package --force --target "+target,
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco force_build/cocotest --strict --package --force --target "+target,
        )
    script_cmds += [
        "python force_build/runner.py",
        "coconut src force_build --strict",
        "python force_build/runner.py",
        "coconut src force_build --strict --force",
        "python force_build/runner.py",

        "coconut src strictless_build",
        "coconut src_target/cocotest/py"+version_num+"_test.coco strictless_build/cocotest --package --target "+target,
        "coconut src_target/cocotest/non_py26_test.coco strictless_build/cocotest --package --target "+target,
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco strictless_build/cocotest --package --target "+target,
        )
    script_cmds += [
        "python strictless_build/runner.py",

        "coconut src minify_build --strict --minify",
        "coconut src_target/cocotest/py"+version_num+"_test.coco minify_build/cocotest --strict --package --target "+target+" --minify",
        "coconut src_target/cocotest/non_py26_test.coco minify_build/cocotest --strict --package --target "+target+" --minify",
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco minify_build/cocotest --strict --package --target "+target+" --minify",
        )
    script_cmds += [
        "python minify_build/runner.py",

        "coconut src linenumbers_build --strict --linenumbers",
        "coconut src_target/cocotest/py"+version_num+"_test.coco linenumbers_build/cocotest --strict --package --target "+target+" --linenumbers",
        "coconut src_target/cocotest/non_py26_test.coco linenumbers_build/cocotest --strict --package --target "+target+" --linenumbers",
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco linenumbers_build/cocotest --strict --package --target "+target+" --linenumbers",
        )
    script_cmds += [
        "python linenumbers_build/runner.py",

        "coconut src keeplines_build --strict --keeplines",
        "coconut src_target/cocotest/py"+version_num+"_test.coco keeplines_build/cocotest --strict --package --target "+target+" --keeplines",
        "coconut src_target/cocotest/non_py26_test.coco keeplines_build/cocotest --strict --package --target "+target+" --keeplines",
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco keeplines_build/cocotest --strict --package --target "+target+" --keeplines",
        )
    script_cmds += [
        "python keeplines_build/runner.py",

        "coconut src jobs0_build --strict --jobs 0",
        "coconut src_target/cocotest/py"+version_num+"_test.coco jobs0_build/cocotest --strict --package --target "+target+" --jobs 0",
        "coconut src_target/cocotest/non_py26_test.coco jobs0_build/cocotest --strict --package --target "+target+" --jobs 0",
    ]
    if py35:
        script_cmds.append(
        "coconut src_target/cocotest/py35_test.coco jobs0_build/cocotest --strict --package --target "+target+" --jobs 0",
        )
    script_cmds += [
        "python jobs0_build/runner.py",

        "coconut src_target sys_build --strict --target sys",
        "python sys_build/runner.py",

        "coconut src_target target_build --strict --display --target "+target,
        "python target_build/runner.py",
    ]

    return install_cmds, script_cmds

main_dir = os.path.join("..", "cocotest")
cocotravis_main = travisgen.builder(main_dir, "python", versions, cocotravis$(False))

test_dir = os.path.join("..", "coconut")
cocotravis_test = travisgen.builder(test_dir, "python", versions, cocotravis$(True))

if __name__ == "__main__":
    cocotravis_main()
    cocotravis_test()
